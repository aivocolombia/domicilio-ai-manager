-- Create ordenes_toppings table to store toppings added to orders
-- This table tracks extra toppings that customers add to their orders

CREATE TABLE IF NOT EXISTS ordenes_toppings (
    id BIGINT GENERATED BY DEFAULT AS IDENTITY PRIMARY KEY,
    orden_id BIGINT NOT NULL REFERENCES ordenes(id) ON DELETE CASCADE,
    topping_id INTEGER NOT NULL REFERENCES toppings(id) ON DELETE RESTRICT,
    created_at TIMESTAMPTZ NOT NULL DEFAULT NOW()
);

-- Create index for better query performance
CREATE INDEX IF NOT EXISTS idx_ordenes_toppings_orden_id ON ordenes_toppings(orden_id);
CREATE INDEX IF NOT EXISTS idx_ordenes_toppings_topping_id ON ordenes_toppings(topping_id);

-- Enable RLS for security
ALTER TABLE ordenes_toppings ENABLE ROW LEVEL SECURITY;

-- Create policies for ordenes_toppings
CREATE POLICY "Enable read access for authenticated users" ON ordenes_toppings
    FOR SELECT USING (auth.role() = 'authenticated');

CREATE POLICY "Enable insert for authenticated users" ON ordenes_toppings
    FOR INSERT WITH CHECK (auth.role() = 'authenticated');

CREATE POLICY "Enable update for authenticated users" ON ordenes_toppings
    FOR UPDATE USING (auth.role() = 'authenticated');

CREATE POLICY "Enable delete for authenticated users" ON ordenes_toppings
    FOR DELETE USING (auth.role() = 'authenticated');